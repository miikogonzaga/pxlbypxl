{"version":3,"sources":["images/Gohan.png","images/pichu/pichu.png","images/pichu/pichu-wallpaper.png","images/vulpix/vulpix.png","images/vulpix/vulpix-wp.png","images/squirtle/squirtle.png","images/squirtle/squirtle-wp.png","components/Nav.js","components/Data.js","components/Card.js","components/Footer.js","components/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","Characters","topic","name","img","url","Squirtle","alt","wallpaper","SquirtleWallpaper","Pichu","PichuWallpaper","Vulpix","VulpixWallpaper","Gohan","Card","props","handleChange","val","target","value","setState","characters","Data","filter","i","state","this","map","key","src","style","maxWidth","href","download","onChange","length","renderCharacters","Component","Footer","Home","background","role","aria-label","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,oHCE5B,SAASC,IACtB,OACE,yBAAKC,UAAU,OACb,yC,6JC6CSC,EAvCI,CACjB,CACEC,MAAO,aACPC,KAAM,WACNC,IAAK,CACHC,IAAKC,IACLC,IAAK,WACLC,UAAWC,MAGf,CACEP,MAAO,aACPC,KAAM,QACNC,IAAK,CACHC,IAAKK,IACLH,IAAK,QACLC,UAAWG,MAGf,CACET,MAAO,aACPC,KAAM,SACNC,IAAK,CACHC,IAAKO,IACLL,IAAK,SACLC,UAAWK,MAGf,CACEX,MAAO,eACPC,KAAM,QACNC,IAAK,CACHC,IAAKS,IACLP,IAAK,QACLC,UAAW,QCzCIO,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAYRC,aAAe,SAACC,GACd,OAAQA,EAAIC,OAAOC,OACjB,IAAK,MACH,EAAKC,SAAS,CACZC,WAAYC,IAEd,MACF,IAAK,aACH,EAAKF,SAAS,CACZC,WAAYC,EAAKC,QAAO,SAAAC,GAAC,MAAgB,eAAZA,EAAEvB,WAEjC,MACF,IAAK,eACH,EAAKmB,SAAS,CACZC,WAAYC,EAAKC,QAAO,SAAAC,GAAC,MAAgB,iBAAZA,EAAEvB,WAEjC,MACF,QACE,EAAKmB,SAAS,CACZC,WAAYC,MA9BlB,EAAKG,MAAQ,CACXJ,WAAYC,GAHG,E,iFAQjBI,KAAKN,SAAS,CACZC,WAAYC,M,yCA8Bd,GAAII,KAAKD,MAAMJ,WACb,OAAOK,KAAKD,MAAMJ,WAAWM,KAAI,gBAC7BxB,EAD6B,EAC7BA,IACAF,EAF6B,EAE7BA,MACAC,EAH6B,EAG7BA,KAH6B,OAK7B,yBAAKH,UAAU,OAAO6B,IAAKzB,EAAIG,KAC7B,sCAEA,yBACEuB,IAAK1B,EAAIC,IACTE,IAAKH,EAAIG,IACTwB,MAAO,CAAEC,SAAU,OAErB,yBAAKhC,UAAU,WACb,2BAAIE,GACJ,4BAAKC,IAGP,uBAAG8B,KAAM7B,EAAII,UAAW0B,SAAU9B,EAAII,WAAtC,QACQL,S,+BAQR,IAAD,OACP,OACE,oCACE,yBAAKH,UAAU,YACb,6BACE,4BAAQmC,SAAU,SAACjB,GAAD,OAAS,EAAKD,aAAaC,KAC3C,uCACA,8CACA,kDAIJ,yBAAKlB,UAAU,WACqB,IAAjC2B,KAAKD,MAAMJ,WAAWc,OACrB,yCACA,+BAAKT,KAAKD,MAAMJ,WAAWc,OAA3B,eAIN,6BAASpC,UAAU,cAChB2B,KAAKU,yB,GAxFkBC,aCFnB,SAASC,IACtB,OACE,6BACE,2BAAG,4CAAH,eCDS,SAASC,IACtB,OACE,yBAAKxC,UAAU,QACb,6BAASA,UAAU,UACjB,4BAAI,0BAAMA,UAAU,QAAhB,QAAJ,0BACA,yBAAKA,UAAU,iBACb,yBAAK+B,MAAO,CAAEU,WAAY,YACxB,2BACE,kCAEF,4BAAI,0BAAMC,KAAK,MAAMC,aAAW,YAA5B,gBAAJ,YAEF,yBAAKZ,MAAO,CAAEU,WAAY,YACxB,2BACE,kCAEF,4BAAI,0BAAMC,KAAK,MAAMC,aAAW,cAA5B,gBAAJ,YAKN,6BAAS3C,UAAU,QACjB,kBAAC,EAAD,OAGF,6BAASA,UAAU,UACjB,kBAACuC,EAAD,QChBOK,MATf,WACE,OACE,yBAAK5C,UAAU,OACb,kBAACD,EAAD,MACA,kBAACyC,EAAD,QCGcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4955a7e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Gohan.096172bb.png\";","module.exports = __webpack_public_path__ + \"static/media/pichu.98845e45.png\";","module.exports = __webpack_public_path__ + \"static/media/pichu-wallpaper.6ba90703.png\";","module.exports = __webpack_public_path__ + \"static/media/vulpix.78e05d0f.png\";","module.exports = __webpack_public_path__ + \"static/media/vulpix-wp.c87400e5.png\";","module.exports = __webpack_public_path__ + \"static/media/squirtle.0fa7496b.png\";","module.exports = __webpack_public_path__ + \"static/media/squirtle-wp.70f9f8b9.png\";","import React from 'react'\n\nexport default function Nav() {\n  return (\n    <div className=\"nav\">\n      <h1>pxlbypxl</h1>\n    </div>\n  )\n}\n","import Gohan from '../images/Gohan.png'\n\nimport Pichu from '../images/pichu/pichu.png'\nimport PichuWallpaper from '../images/pichu/pichu-wallpaper.png'\n\nimport Vulpix from '../images/vulpix/vulpix.png'\nimport VulpixWallpaper from '../images/vulpix/vulpix-wp.png'\n\nimport Squirtle from '../images/squirtle/squirtle.png'\nimport SquirtleWallpaper from '../images/squirtle/squirtle-wp.png'\n\nconst Characters = [\n  {\n    topic: 'PokÃ©mon',\n    name: 'Squirtle',\n    img: {\n      url: Squirtle,\n      alt: 'Squirtle',\n      wallpaper: SquirtleWallpaper\n    }\n  },\n  {\n    topic: 'PokÃ©mon',\n    name: 'Pichu',\n    img: {\n      url: Pichu,\n      alt: 'Pichu',\n      wallpaper: PichuWallpaper\n    }\n  },\n  {\n    topic: 'PokÃ©mon',\n    name: 'Vulpix',\n    img: {\n      url: Vulpix,\n      alt: 'Vulpix',\n      wallpaper: VulpixWallpaper\n    }\n  },\n  {\n    topic: 'Dragonball Z',\n    name: 'Gohan',\n    img: {\n      url: Gohan,\n      alt: 'Gohan',\n      wallpaper: null\n    }\n  }\n]\n\nexport default Characters\n","import React, { Component } from 'react';\nimport Data from './Data';\nimport '../index.scss';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      characters: Data,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      characters: Data\n    })\n  }\n\n  handleChange = (val) => {\n    switch (val.target.value) {\n      case 'All':\n        this.setState({\n          characters: Data\n        })\n        break\n      case 'PokÃ©mon':\n        this.setState({\n          characters: Data.filter(i => i.topic === 'PokÃ©mon')\n        })\n        break\n      case 'Dragonball Z':\n        this.setState({\n          characters: Data.filter(i => i.topic === 'Dragonball Z')\n        })\n        break\n      default:\n        this.setState({\n          characters: Data\n        })\n        break\n    }\n  }\n\n  renderCharacters() {\n    if (this.state.characters) {\n      return this.state.characters.map(({\n          img,\n          topic,\n          name\n        }) => (\n          <div className=\"card\" key={img.alt}>\n            <span>Free</span>\n\n            <img\n              src={img.url}\n              alt={img.alt}\n              style={{ maxWidth: 500 }}/>\n\n            <div className=\"details\">\n              <p>{topic}</p>\n              <h2>{name}</h2>\n            </div>\n\n            <a href={img.wallpaper} download={img.wallpaper}>\n              Save {name}\n            </a>\n          </div>\n        )\n      )\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"dropdown\">\n          <div>\n            <select onChange={(val) => this.handleChange(val)}>\n              <option>All</option>\n              <option>PokÃ©mon</option>\n              <option>Dragonball Z</option>\n            </select>\n          </div>\n\n          <div className=\"results\">\n            {this.state.characters.length === 1 ?\n              <p>(1) result</p> :\n              <p>({this.state.characters.length}) results</p> }\n          </div>\n        </div>\n\n        <section className=\"characters\">\n          {this.renderCharacters()}\n        </section>\n      </>\n    )\n  }\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <div>\n      <p><small>Â© 2020</small> pxlbypxl </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport Card from './Card';\nimport Footer from './Footer'\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <section className=\"slogan\">\n        <h2><span className=\"free\">FREE</span> Wallpaper Backgrounds</h2>\n        <div className=\"sellingPoints\">\n          <div style={{ background: '#f7f7f7' }}>\n            <p>\n              <b>1.</b>\n            </p>\n            <h3><span role=\"img\" aria-label=\"Eyeballs\">ðŸ‘€</span> Browse</h3>\n          </div>\n          <div style={{ background: '#FEFEFE' }}>\n            <p>\n              <b>2.</b>\n            </p>\n            <h3><span role=\"img\" aria-label=\"Smartphone\">ðŸ“²</span> Save</h3>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"main\">\n        <Card />\n      </section>\n\n      <section className=\"footer\">\n        <Footer />\n      </section>\n    </div>\n  )\n}\n","import React from 'react';\nimport '../index.scss';\nimport Nav from './Nav'\nimport Home from './Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}